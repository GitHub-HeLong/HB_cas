/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.23
 * Generated at: 2017-06-13 03:21:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class authorizationFailure_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("    <!DOCTYPE html>\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        <style>\n");
      out.write("        html{\n");
      out.write("        height:97%;\n");
      out.write("        width: 97%;\n");
      out.write("        background: #FFFFFF;\n");
      out.write("        }\n");
      out.write("        body{\n");
      out.write("        position:relative;\n");
      out.write("        height:100%;\n");
      out.write("        -moz-user-select: none;\n");
      out.write("        -ms-user-select: none;\n");
      out.write("        width: 100%;\n");
      out.write("        }\n");
      out.write("        body >label{\n");
      out.write("        position: absolute;\n");
      out.write("        width: 221px;\n");
      out.write("        height: 165px;\n");
      out.write("        margin: 0 auto;\n");
      out.write("        background: url(\"images/AuthorizationFailure.png\") no-repeat 50px 0;\n");
      out.write("        padding-top: 135px;\n");
      out.write("        display: none;\n");
      out.write("        text-align: center;\n");
      out.write("        font-family: 'Microsoft Yahei', Arial, Simsun, sans-serif;\n");
      out.write("        font-size: 36px;\n");
      out.write("        color: #c8c8c8;\n");
      out.write("        }\n");
      out.write("        body >a{\n");
      out.write("        position: absolute;\n");
      out.write("        width: 221px;\n");
      out.write("        height: 50px;\n");
      out.write("        border-radius: 5px;\n");
      out.write("        text-align: center;\n");
      out.write("        font-family: 'Microsoft Yahei', Arial, Simsun, sans-serif;\n");
      out.write("        font-size: 20px;\n");
      out.write("        line-height: 50px;\n");
      out.write("        background-color:#067ECE !important; ;\n");
      out.write("        color: #FFFFFF;\n");
      out.write("        display:none;\n");
      out.write("        }\n");
      out.write("        body >a:hover{\n");
      out.write("        cursor: pointer;\n");
      out.write("        }\n");
      out.write("        </style>\n");
      out.write("        <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <title></title>\n");
      out.write("        </head>\n");
      out.write("        <body onload=\"ready()\">\n");
      out.write("        <label id=\"label_icon\">无访问权限</label>\n");
      out.write("        <a id=\"a_btn\">重新登陆</a>\n");
      out.write("        </body>\n");
      out.write("        <script>\n");
      out.write("        window.onresize=function(){\n");
      out.write("        resize();\n");
      out.write("        }\n");
      out.write("        function ready(){\n");
      out.write("        resize();\n");
      out.write("        setUrl();\n");
      out.write("        }\n");
      out.write("        function resize(){\n");
      out.write("        var clientHeight = document.body.clientHeight;\n");
      out.write("        var clientWidth = document.body.clientWidth;\n");
      out.write("        var top = (clientHeight - 300)/2;\n");
      out.write("        var left = (clientWidth - 221)/2;\n");
      out.write("        document.getElementById(\"label_icon\").style.top = top+\"px\";\n");
      out.write("        document.getElementById(\"label_icon\").style.left = left+\"px\";\n");
      out.write("        document.getElementById(\"label_icon\").style.display = \"block\"\n");
      out.write("        var top = clientHeight / 2 + 100;\n");
      out.write("        document.getElementById(\"a_btn\").style.top = top+\"px\";\n");
      out.write("        document.getElementById(\"a_btn\").style.left = left+\"px\";\n");
      out.write("        document.getElementById(\"a_btn\").style.display = \"block\"\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function setUrl(){\n");
      out.write("        var url = getUrlParam(\"logoutUrl\");\n");
      out.write("        document.getElementById(\"a_btn\").href = url;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function getUrlParam(name){\n");
      out.write("        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\n");
      out.write("        var r = window.location.search.substr(1).match(reg);\n");
      out.write("        if(r!=null) return  unescape(r[2]); return null;\n");
      out.write("        }\n");
      out.write("        </script>\n");
      out.write("        </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
